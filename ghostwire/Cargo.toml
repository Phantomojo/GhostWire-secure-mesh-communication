[package]
name = "ghostwire"
version = "0.1.0"
edition = "2021"
authors = ["GhostWire Team"]
description = "Secure mesh networking and messaging platform"
license = "MIT"
repository = "https://github.com/ghostwire/ghostwire"
keywords = ["mesh", "networking", "security", "privacy", "p2p"]
categories = ["network-programming", "security", "asynchronous"]

[dependencies]
# Core async runtime
tokio = { version = "1.0", features = ["full"] }

# Web framework
axum = { version = "0.7", features = ["ws"] }
tower = { version = "0.4" }
tower-http = { version = "0.5", features = ["cors"] }

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = { version = "1.0" }
toml = { version = "0.8" }

# Networking
libp2p = { version = "0.53", features = ["tokio", "macros", "tcp", "noise", "yamux", "kad", "gossipsub", "mdns", "identify"] }
reqwest = { version = "0.11", features = ["json"] }
libp2p-tcp = { version = "0.41" }

# Cryptography
ring = { version = "0.17" }
ed25519-dalek = { version = "2.0" }
x25519-dalek = { version = "2.0" }
aes-gcm = { version = "0.10" }
chacha20poly1305 = { version = "0.10" }

# Utilities
anyhow = { version = "1.0" }
thiserror = { version = "1.0" }
uuid = { version = "1.0", features = ["v4", "serde"] }
chrono = { version = "0.4", features = ["serde"] }
base64 = { version = "0.21" }
hex = { version = "0.4" }
bs58 = { version = "0.5" }
lazy_static = { version = "1.4" }

# CLI
clap = { version = "4.0", features = ["derive"] }

# Logging
tracing = { version = "0.1" }
tracing-subscriber = { version = "0.3" }

# System
hostname = { version = "0.3" }
local-ip-address = { version = "0.5" }

# Optional features
neli = { version = "0.6" }
async-trait = { version = "0.1" }
futures = { version = "0.3", optional = true }
futures-util = { version = "0.3" }

# TUI dependencies
ratatui = { version = "0.26" }
crossterm = { version = "0.27" }

[features]
default = ["web", "cli", "mesh", "security", "tui"]
web = []
cli = []
mesh = []
security = []
matrix = []
matrix-bridge = []
meshtastic = []
reticulum = []
briar = []
stealth = []
tui = []

# Minimal build for embedded systems
minimal = []

[profile.release]
opt-level = 3
lto = true
codegen-units = 1
panic = "abort"
strip = true

[profile.dev]
opt-level = 0
debug = true

[profile.release.package."*"]
opt-level = 3

# Optimize specific crates
[profile.release.package.ring]
opt-level = 3

[profile.release.package.libp2p]
opt-level = 3

[profile.release.package.tokio]
opt-level = 3
